---
# Source: drone-runner-docker/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drone-runner-docker
  namespace: drone
  labels:
    release: drone-runner-docker
    helm.sh/chart: drone-runner-docker-0.4.0
    app.kubernetes.io/name: drone-runner-docker
    app.kubernetes.io/instance: drone-runner-docker
    app.kubernetes.io/version: "1.8.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: drone-runner-docker
      app.kubernetes.io/instance: drone-runner-docker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: drone-runner-docker
        app.kubernetes.io/instance: drone-runner-docker
    spec:
      serviceAccountName: drone-runner-docker
      volumes:
        - emptyDir: {}
          name: storage
      containers:
        - name: dind
          image: "docker:20-dind"
          imagePullPolicy: IfNotPresent
          command:
            - dockerd
          args:
            - --host
            - tcp://localhost:2375
          securityContext:
            privileged: true
          livenessProbe:
            exec:
              command:
              - docker
              - -H
              - tcp://localhost:2375
              - images
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            exec:
              command:
              - docker
              - -H
              - tcp://localhost:2375
              - images
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - mountPath: /var/lib/docker
              name: storage
              subPath: docker
        - name: gc
          image: "drone/gc:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: DOCKER_HOST
              value: tcp://localhost:2375
            - name: GC_CACHE
              value: "5gb"
            - name: GC_DEBUG
              value: "false"
            - name: GC_DEBUG_COLOR
              value: "false"
            - name: GC_DEBUG_PRETTY
              value: "false"
            - name: GC_IGNORE_CONTAINERS
              value: ""
            - name: GC_IGNORE_IMAGES
              value: ""
            - name: GC_INTERVAL
              value: "5m"
        - name: drone-runner-docker
          image: "drone/drone-runner-docker:1.8.1"
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: drone-runner-docker
            - secretRef:
                name: drone-runner-secret
          env:
            - name: DOCKER_HOST
              value: tcp://localhost:2375
            - name: DRONE_RUNNER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: tcp
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: tcp
          readinessProbe:
            tcpSocket:
              port: tcp
